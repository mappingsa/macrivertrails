// Populate the map, based on URL params
createMap = function() {
    var lists, title;

    // attempt to get specifc marker data from item  page
    urlVars = getUrlVars();
    selGroup = urlVars["section"] || "";
    selItem = urlVars["item"] || "";
    selLocation = urlVars["location"] || "";
    selLocationMe = selLocation === "me";
    selTodo = urlVars["todo"];    // This one only, undefined if not present

    if (selTodo) {
      selTodo = parseInt(selTodo);  // Default to 0 (Favourites) if not an integer
      }
    else {
      selTodo = undefined;   // Make sure it is undefined (in case just empty) since we test against undefined specifically
    }

    loadingSingle = false;
    fullLoad = false;

    // Single place = "get directions"  group=<group name>&item=<item name>
    if ( selItem.length && selGroup.length ){
      loadingSingle = true;
      selTodo = undefined;
      }
    // Group - clicked on a group header in Browse (same result as group button on map )
    // group=<group name>
    else if (selGroup.length) {
      selItem = "";
      selTodo = undefined;
      }
    // Todo list. 0=Favourites, 1-n - Itineraries (todo=n)
    else if (selTodo !== undefined) {
      lists = localStore.getLists();
      title = lists[selTodo].title;
      $headerTitle.text(title);
      $topMarkerNav.height(0).hide().trigger("updatelayout");
      iscrollview.resizeWrapper();
      selItem = "";
      selGroup = "";
      }
    // All places "nearby" button (location=me)
    else {
      fullLoad = true;
      selItem = "";
      selGroup = "";
      }
    // Set the appropriate tabbar button active
    if (selLocationMe) {
      $activeGroupButton = $page.find(".markerNav:jqmData(group=all)");
      $activeGroupButton.addClass("ui-btn-active");
      }
    else if (selGroup) {
      $activeGroupButton = $page.find(".markerNav:jqmData(group=" + selGroup + ")" );
      $activeGroupButton.addClass("ui-btn-active");
      }

    gmap.option( "zoom", (loadingSingle || selTodo !== undefined) ? zoomLevelPlace : zoomLevelAll );

    //---------- Add markers for selected places ------------v
    gmap.clear( "markers" );
    gmap.set( "bounds", null );
    $.each( places, function(i, place) {
      var group = place.group,
          item = place.item,
          position = place.position,
          title = place["title"],
          coords = place.position.split(","),
          lat = trim(coords[0]),
          lng = trim(coords[1]),
          showAlways = groupShowAlways(group),
          zIndex = groupZindex(group);

      if ( ( (selTodo === undefined) && (selItem === item) && (selGroup === group) )
           || ( ( selTodo !== undefined ) && (localStore.isInList(selTodo, group, item)  === selTodo) )
           || showAlways
           || fullLoad
        ) {
        if ( selItem === item && selGroup === group) {  // Want to see single place - "directions"
          centerLoc = new google.maps.LatLng(lat, lng); // Center on the place
          gmap.option( "center", centerLoc );
          $to.attr("value",  place.position);          // Prepare to get directions,
          $toPretty.attr("value", title);        // But don't show direcitons fields yet
                                                       // (Not until/unless we get user location )
          }
        gmap.addMarker( {
          position: position,
          bounds: selTodo !== undefined && !showAlways,
          optimized: false,
          flat:true,
          icon: groupIcon(group),
          group: group,
          mTitle: title,
          mLink: markerLink(place),
          zIndex: zIndex,
          } ).click(function() { openInfoWindow(place, this); });
        }
    });
    //--------------- each  --------------------------------^

  if (loadingSingle) {
    $topMarkerNav.height(0).hide().trigger("updatelayout");
    iscrollview.resizeWrapper();
    $headerTitle.text("Directions");
    }

  addMyLocation();
  iscrollview.refresh();

  var bounds = gmap.get("bounds");
    setTimeout ( function() {
      if (bounds) {
        map.fitBounds(bounds);
        gmap.refresh();
        }
      else {
        gmap.refresh();
      }
    }, 0);


  }
