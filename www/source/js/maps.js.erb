/*
    build_target: '<%= build_target %>',
    base_uri: '<%= base_uri %>',
*/

  function onInfoWindowLink (href) {
    $.mobile.changePage(href,
      {
      "transition": "slide"
      } );
    return false;
    };

$(function() {
  var
    zoomLevelAll = 7,         // Initial zoom for nearby, todo, browse trail headers
    zoomLevelNearby = 12,     // nearby, todo, browse once location is known
    zoomLevelPlace = 14,      // Always use this zoom for get directions
    zoomLevelUser = 18,       // "locate me" button

    maxNearbyDist = 1000,     // Max km from default center to center on user location
                              // If user is further than this, then we will center on default
                              // location

    // TODO: Update this to geographical center of the region
    defaultLat = -32.249085,  // Default center location (Dubbo)
    defaultLng = 148.604826,


  // TODO: initialization of these marker images should be deferred to the first pageinit, so that
  // Google Maps JS is not required until the first use of the map page. They are fine here for
  // now, since we currently still always load Google Maps JS in <head>.
  //
  // It's not desireable to initialize the big places array on every pageinit, so it is initialized once
  // here in the outer closure.
  //
  // We will need to keep an "initialized" variable here, and on first pageinit if false, create the
  // marker images and backfill the places table. (i.e. the icon variables should be removed here in the
  // outer closure and initialized on first pageinit, which can be done based on the group name. )

    pinSize = new google.maps.Size(30,42),
    altPinSize = new google.maps.Size(32,37),
    infoBoxOffset = new google.maps.Size(-30, -10),
    hereMarkerSize = new google.maps.Size(17, 17),

    pixelRatio = window.devicePixelRatio || 1.0,
    use2X = pixelRatio >= 1.5,
    res = use2X ? "@2x" : "",

    cycle = new google.maps.MarkerImage( "images/Cycle-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    heritage = new google.maps.MarkerImage( "images/Heritage-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    nature = new google.maps.MarkerImage("images/Nature-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    produce = new google.maps.MarkerImage("images/Produce-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    river = new google.maps.MarkerImage("images/River-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    riverbedz = new google.maps.MarkerImage("images/Riverbedz-pin-map" + res + ".png", pinSize, null, null, pinSize ),
    fishing = new google.maps.MarkerImage("images/Fishing-pin-map" + res + ".png", pinSize, null, null, pinSize ),

    boatramp = new google.maps.MarkerImage("images/boatramp.png", altPinSize ),
    info = new google.maps.MarkerImage("images/info.png", altPinSize ),
    rv = new google.maps.MarkerImage("images/rv.png", altPinSize ),

    hereMarker = new google.maps.MarkerImage ("images/bluedot_retina.png", hereMarkerSize, null, null, hereMarkerSize),

    hereMarkerZindex = 20,

    markerListItemTemplate =
    '<li class="big-arrow" data-icon="false">' +
      '<a href="|link|">|title||distance|' +
        '<img src="<%= (base_uri ? base_uri : '../') + 'images/' %>|pin|-pin|res|.png" alt="|alt|" class="ui-li-icon trail-pin">' +
      '</a>' +
    '</li>',

    markerListNoteLocationKnown = "Distance displayed in list is based on a straight path from your location.",
    markerListNoteLocationUnknown =
      "Distances are not shown because your current location is not known. " +
      "This might be because a position could not be determined at this time from GPS or other sources, " +
      "because your computer or device lacks geolocation services, or because you have not " +
      "enabled geolocation services.",

    <%= partial 'js/map/place_data' %>,
    <%= partial 'js/map/utils' %>
    ;

  // Initialize a map page
  $(document).on( "pageinit", ".map-page", function() {
    var
      knownLocation = false,
      defaultLoc = new google.maps.LatLng(defaultLat, defaultLng ),
      userLoc = undefined,                                          // Initially unknown
      centerLoc = defaultLoc,                                       // Where to center the map
      tripOriginLoc = userLoc,                                      // Origin of trip for distance, directions
      fullLoad = false,
      loadingSingle = false,
      $page = $( this ),
      $canvas = $page.find( ".map-canvas" ),   // The element that holds the map
      gmap,     // The jquery.ui-map object
      map,      // The Google map object
      iscrollview = $page.find( ".iscroll-wrapper" ).data( "iscrollview" ),
      $to = $page.find( ".to" ),
      $toPretty = $page.find( ".toPretty" ),
      $from = $page.find( ".from" ),
      $fromPretty = $page.find( ".fromPretty" ),
      $directionsFields = $page.find( ".directionsFields" ),
      $markerList = $page.find( ".marker-list"),
      markerListview = $markerList.data( "listview" ),
      $markerListNote = $page.find( ".markerListNote" ),
      $submitDirections = $page.find( ".submitDirections" ),
      $results = $page.find( ".results" ),
      $topMarkerNav = $page.find(".topMarkerNav"),
      $directions = $page.find(".directions"),
      $headerTitle = $page.find(".mapsheader h1"),
      $activeGroupButton = null,
      infoBox = null,
      urlVars,
      selGroup,
      selItem,
      selLocation,
      selLocationMe,
      selTodo,
      $noLocationPopup = $(".no-location-popup"),
      geoLocationMarker,
      <%= partial 'js/map/info_window' %>,
      <%= partial 'js/map/marker_list' %>,
      <%= partial 'js/map/location' %>,
      <%= partial 'js/map/create' %>,
      <%= partial 'js/map/page_utils' %>
      ;

  <%= partial 'js/map/page_events' %>

  // Instantiate the map object on the canvas element
  $canvas.gmap( {
    center: defaultLoc,
    zoom: zoomLevelAll,
    callback: function() {
      gmap = this;
      map = gmap.get("map");
      createMap();
      }
    });

  });  // pageinit

});  // Outer closure
